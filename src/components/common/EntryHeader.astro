---
import { markdownify, slugify, upperHumanize, lowerHumanize } from "@lib/textConverter";
import { Image } from "astro:assets";
import {
  FaRegUserCircle,
  FaRegFolder,
  FaHashtag,
  FaRegClock,
} from "react-icons/fa";
import type { GenericEntry, EntryReference } from "@/types";

interface EntryData {
  title: string;
  description?: string;
  image?: string;
  imageAlt?: string;
  author?: EntryReference;
  categories?: string[];
  tags?: string[];
  complexity?: number;
}

interface Props {
  entry: GenericEntry;
  showInfo?: boolean;
  showImage?: boolean;
  showAuthor?: boolean;
  showReadingTime?: boolean;
  showCategories?: boolean;
  showTags?: boolean;
}

const {
  entry,
  showInfo = true,
  showImage = false,
  showAuthor = false,
  showReadingTime = false,
  showCategories = false,
  showTags = false,
}: Props = Astro.props;

const {
  title,
  description,
  author,
  categories,
  tags,
  image,
  imageAlt,
  complexity,
} = entry.data as EntryData;

categories?.sort((a: string, b: string) => a.localeCompare(b));
tags?.sort((a: string, b: string) => a.localeCompare(b));
---

<div class="mt-2">
  {image && showImage && (
    <div class="mb-8 glass rounded-lg intersect:animate-fadeDown opacity-0 intersect-no-queue">
      <Image
        class="w-1/2 mx-auto rounded-lg"
        src={image}
        alt={imageAlt || ""}
        height={250}
        width={600}
        loading="eager"
      />
    </div>
  )}
</div>

{showInfo && (
  <div class="glass mb-8 p-6 rounded-lg intersect:animate-fade opacity-0 intersect-no-queue flex flex-col items-center text-center">
    
    <!-- Título centrado -->
    <h1 set:html={markdownify(title)} class="text-3xl font-bold mb-4" />

    <!-- Descripción con soporte dark mode -->
    {description && (
      <div 
        class="text-lg mb-6 text-gray-700 dark:text-gray-300"
        set:html={markdownify(description)}
      />
    )}

    <!-- Autor, categorías y tags centrados -->
    <ul class="flex flex-wrap justify-center gap-2">
      {author && showAuthor && (
        <li class="inline-block">
          <a href={`/authors/${slugify(author.id)}`} class="flex items-center gap-1">
            <FaRegUserCircle class="inline-block" />
            {upperHumanize(author.id)}
          </a>
        </li>
      )}

      {complexity && showReadingTime && (
        <li class="inline-block flex items-center gap-1">
          <FaRegClock class="inline-block" />
          {complexity} min
        </li>
      )}

      {categories && showCategories && categories.map((cat) => (
        <li class="inline-block flex items-center gap-1">
          <a href={`/blog/categories/${slugify(cat)}`}>
            <FaRegFolder class="inline-block" />
            {upperHumanize(cat)}
          </a>
        </li>
      ))}

      {tags && showTags && tags.map((tag) => (
        <li class="inline-block flex items-center gap-1">
          <a href={`/blog/tags/${slugify(tag)}`}>
            <FaHashtag class="inline-block" />
            {lowerHumanize(tag)}
          </a>
        </li>
      ))}
    </ul>
  </div>
)}
